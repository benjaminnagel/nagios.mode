<?xml version="1.0" encoding="UTF-8"?>

<syntax>
    <head>
        <name>Nagios</name>

        <autocompleteoptions use-spelling-dictionary="yes" />

        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens> 
        <!-- <charsdelimitingtokens><![CDATA[ -]]></charsdelimitingtokens> -->
        
        
        <!--
          the <charsincompletion> defines characters used for autocompletion. e.g. in perl
          you want this to include the $ sign to autocomplete variables.
          If left out the regular expression word boundaries are used.
        -->
        <!-- <charsincompletion><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-@$</=>!]]></charsincompletion> -->
    </head>


    <!-- 
    The <states> tag encloses all syntax states.
    States are areas of the test that begin and end with an regex like comments or strings,
    with exception of the default state, that exists anywhere where no other state exists.
    This tag is required.
    -->    

    <states>
    
        <!-- 
        The <default> tag specifies what is colored within the default state (see above).
        It features the following attributes, all optional if not noted otherwise:
            id
                Has to be a unique string. Has to be specified.
            color
                a html comptible color in three or six letter hexadecimal format.
                Used for text on bright document background colors.
            inverted-color
                a html comptible color in three or six letter hexadecimal format.
                Used for text if a dark document background color is set.
            font-weight
                normal  Normal font-weight (default)
                bold    Bold text in popup
            font-style
                normal  Normal font-weight (default)
                italic  Bold text in popup
            usesymbolsfrommode
                a mode name to use the symbol recognition from
                when left out the value is inherited from the parent state
            useautocompletefrommode
                a mode name to use the autocomplete from - default is this mode
                when left out the value is inherited from the parent state
            type
                a string description of the type. currently only the values
                "string" and "comment" have meaning and cause bracket matching
                and syntax highlighting to ignore these areas of text
                
        -->    
    
        <default id="Base" color="#000" inverted-color="#fff">

            <keywords id="Keywords" color="#400080" font-weight="bold" casesensitive="no" useforautocomplete="yes">
            
				<string>host_name</string>
				<string>name</string>
				<string>alias</string>
                <string>address</string>
                <string>use</string>
                <string>parents</string>
                <string>check_command</string>
                <string>service_description</string>
                <string>hostgroups</string>
                <string>hostgroup_name</string>
                <string>notification_interval</string>
                <string>notification_options</string>
                <string>contact_name</string>
                <string>contact_groups</string>
                <string>service_notification_period</string>
                <string>host_notification_period</string>
                <string>service_notification_options</string>
                <string>host_notification_options</string>
                <string>service_notification_commands</string>
                <string>host_notification_commands</string>
                <string>email</string>
                <string>contactgroup_name</string>
                <string>members</string>
                <string>max_check_attempts</string>
                <string>register</string>
                <string>notification_options</string>
                <string></string>

            </keywords>

            <keywords id="Definitions" color="#6C0540" font-weight="bold" casesensitive="no" font-style="italic" useforautocomplete="yes">
                
                <string>define</string>

            </keywords>
            
            <state id="SingleComment #" color="#236E25" font-style="italic">
                <begin><regex>#</regex></begin>
                <end><regex>[\n\r]</regex></end>
            </state>

            <state id="SingleComment ;" color="#236E25" font-style="italic">
                <begin><regex>;</regex></begin>
                <end><regex>[\n\r]</regex></end>
            </state>
            
            <state id="String" color="#760f15">
                <begin><regex>"</regex></begin>
                <end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
                <keywords id="Other keywords" color="#400080" font-style="italic">
                  <string>foobar</string>
                </keywords>
            </state>

        </default>
        
    </states>

</syntax>